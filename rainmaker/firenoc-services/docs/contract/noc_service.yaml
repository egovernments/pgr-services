swagger: '2.0'
info:
  version: 1.0.0
  title: eGov NOC module.
  description: |
    APIs for NOC module. This modules handles Below functionality.
      1. Apply NOC.
      2. Search existing NOC with different fiters.
      3. Update exiting NOC.
  contact:
    name: eGovernments Foundation
    email: contacts@egovernments.org
schemes:
  - https
basePath: /noc-service
x-api-id: org.egov.noc.services
x-common-path: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-1-1.yml'
paths:
  /v1/_search:
    post:
      summary: Get the list of NOC(s) defined in the system.
      description: |-
        1. Search and get NOC(s)  based on defined search criteria.
      parameters:
        - $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-1-1.yml#/parameters/requestInfo'
        - $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-1-1.yml#/parameters/tenantId'
        - $ref: '#/parameters/pageNumber'
        - name: status
          in: query
          description: Search based on status.
          type: string
          allowEmptyValue: true
        - name: ids
          type: array
          items:
            type: integer
            format: int64
          in: query
          maxItems: 50
          description: unique identifier of NOC
        - name: applicationNumber
          in: query
          description: Unique application number for a NOC application.
          type: string
          minLength: 2
          maxLength: 64
        - name: nocNumber
          in: query
          description: The unique  license number  for a NOC.
          type: string
          minLength: 2
          maxLength: 64
        - name: mobileNumber
          in: query
          description: The mobile number of a NOC owner.
          type: string
          pattern: '[0-9]'
        - name: nocType
          in: query
          description: NOC type.
          type: string
        - name: nocSubType
          in: query
          description: NOC type.
          type: string
      responses:
        '200':
          description: NOC(s) Retrived Successfully
          schema:
            $ref: '#/definitions/NOCResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-1-1.yml#/definitions/ErrorRes'
      tags:
        - NOC
  /v1/_create:
    post:
      summary: Create new NOC.
      description: |
        To create new NOC in the system. API supports bulk creation with max limit as defined in the NOC Request. Please note that either whole batch succeeds or fails, there's no partial batch success. To create one NOC, please pass array with one NOC object.


        Following Conditions are applied -
          1. Support Documents for a given NOC will created. In case of not attaching the Mandatory Supported Documents creation of NOC Fails.
          2. Noc Number will be autogenerated on final approval for new License.
          3. ApplicationNumber will be autogenerated for new NOC
      parameters:
        - name: NOCRequest
          in: body
          description: Details for the new NOC(s) + RequestInfo meta data.
          required: true
          schema:
            $ref: '#/definitions/NOCRequest'
      responses:
        '201':
          description: ReponseInfo with NOC(s) created successfully
          schema:
            $ref: '#/definitions/NOCResponse'
        '400':
          description: NOC(s) creation failed
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - NOC
  /v1/_update:
    post:
      summary: update existing NOCs.
      description: |
        To update existing NOC in the system. API supports bulk updation with max limit as defined in the NOC Request. Please note that either whole batch succeeds or fails, there's no partial batch success. To update one NOC, please pass array with one NOC object.

        Following Conditions are applied -
          1. Before payment Employee or Citizen can update any details of NOC
          2. After payment Citizen or Employee can't change any details of NOC.
      parameters:
        - name: NOCRequest
          in: body
          description: Details for the new NOC(s) + RequestInfo meta data.
          required: true
          schema:
            $ref: '#/definitions/NOCRequest'
      responses:
        '201':
          description: ReponseInfo with NOC(s) updated sudcessfully
          schema:
            $ref: '#/definitions/NOCResponse'
        '400':
          description: NOC(s) updation failed
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - NOC
definitions:
  NocTypeDetails:
    type: object
    description: 'This is the dynamic data, depends on type of noc those related data will be filled by user, based on this calculation of noc fees will calculate. eg :-  firenoc building and propert details will be filled here for calculation'
    properties:
      propertyDetails:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/noc/rainmaker/noc-services/docs/contract/firenoc_models.yaml#/definitions/PropertyDetails'
  OwnerInfo:
    allOf:
      - $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/egov-user/contracts/v1-0-0.yml#/definitions/User'
      - type: object
        properties:
          isPrimaryOwner:
            type: boolean
            description: The owner is primary or not
          ownerShipPercentage:
            type: number
            format: double
            description: Ownership percentage.
          ownerType:
            type: string
            description: 'Type of owner, based on this option Exemptions will be applied. This is master data defined in mdms.'
            maxLength: 256
            minLength: 4
          relationship:
            type: string
            description: Relationship with owner.
            enum:
              - FATHER
              - HUSBAND
          documents:
            description: Document of the owner.
            items:
              $ref: '#/definitions/Document'
  Document:
    type: object
    description: A Object holds the basic data for a NOC
    properties:
      tenantId:
        type: string
        description: Unique Identifier of ULB
        maxLength: 128
        minLength: 2
      documentType:
        type: string
        minLength: 2
        maxLength: 64
        description: '1.Unique document type code from common master. 2. This is defined under mdms common master. 3. Object defination is defined under ''https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-1-1.yml#/definitions/DocumentType'''
      documentSubType:
        type: string
        minLength: 2
        maxLength: 64
        description: 'It will be aadhar card, pancard and voter id'
      fileStoreId:
        type: string
        minLength: 2
        maxLength: 64
        description: Unique file store id of uploaded document.
      documentUid:
        type: string
        minLength: 2
        maxLength: 64
        description: 'document number(eg.Pan number, aadhar number).'
      auditDetails:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
    required:
      - tenantId
      - documentType
      - fileStoreId
  NOC:
    type: object
    description: A Object holds the basic data for a NOC
    properties:
      id:
        type: string
        minLength: 2
        maxLength: 64
        description: Unique Identifier of the NOC (UUID)
        readOnly: true
      tenantId:
        type: string
        description: Unique Identifier of ULB
        maxLength: 128
        minLength: 2
      nocType:
        type: string
        description: Type of noc
        enum:
          - FIRENOC
          - BUINDINGPLAN
      nocNumber:
        type: string
        description: Unique NOC Number of the NOC. This is  unique in system for a tenant. This is mandatory but always be generated on the final approval.
        maxLength: 64
        minLength: 2
        readOnly: true
      provisionNOCNumber:
        type: string
        description: Unique NOC Number of the Provision NOC number that will be used for linking provision noc number with new noc number. This is  unique in system for a tenant. This is mandatory but always be generated on the final approval.
        maxLength: 64
        minLength: 2
      oldNOCNumber:
        type: string
        description: Unique Old License Number of the NOC. This is  unique in system for a tenant. This is mandatory  for legacy license(DataEntry).
        maxLength: 64
        minLength: 2
      commencementDate:
        type: integer
        format: int64
        description: Commencement Date of the noc as epoch
      nocDetail:
        type: array
        items:
          $ref: '#/definitions/NOCDetail'
      auditDetails:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
    required:
      - tenantId
      - nocType
      - commencementDate
      - nocDetail
  NOCDetail:
    type: object
    description: A Object holds the basic data for a NOC
    properties:
      nocTypeDetails:
        $ref: '#/definitions/NocTypeDetails'
      nocSubType:
        type: string
        description: SubType of noc
        enum:
          - PROVISION
          - NEW
          - RENEW
      applicationDate:
        type: integer
        format: int64
        description: date on which applicaiton has been generated for new NOC.
        readOnly: true
      issuedDate:
        type: integer
        format: int64
        description: 1. License issued Date of the NOC as epoch. 2. Application approval date.
        readOnly: true
      financialYear:
        type: string
        description: NOC applicable for financial year.
        maxLength: 64
        minLength: 2
      validFrom:
        type: integer
        format: int64
        description: Date from when NOC is valid as epoch
      validTo:
        type: integer
        format: int64
        description: Expiry Date of the NOC as epoch
      action:
        type: string
        description: '1. Perform action to change the state of the NOC. 2. INITIATE, if application is getting submitted without required document. 3. APPLY, if application is getting submitted with application documents, in that case api will validate all the required application document. 4. APPROVE action is only applicable for specific role, that role has to be configurable at service level. Employee can approve a application only if application is in APPLIED state and NOC fees is paid.'
        enum:
          - INITIATE
          - APPLY
          - APPROVE
          - REJECT
          - CANCEL
      status:
        type: string
        description: Unique identifier (code) of the NOC Status
        enum:
          - INITIATED
          - APPLIED
          - APPROVED
          - REJECTED
          - CANCELED
      applicantDetails:
        type: object
        description: This will have details about applicant details
        properties:
          ownerShipType:
            description: type pf the owner ship
            type: string
          owners:
            description: 'NOC owners, these will be citizen users in system.'
            type: array
            items:
              $ref: '#/definitions/OwnerInfo'
          additionalDetail:
            type: object
            description: Json object to store additional details about license, this will be used when ownership is intitution or others
      channel:
        type: string
        description: License can be created from different channels
        maxLength: 64
        minLength: 2
        enum:
          - COUNTER
          - CITIZEN
          - DATAENTRY
      applicationDocuments:
        description: 1. List of all the required documents. 2. Application can be submitted without required document 3. Once all the document submitted then only application submition process will be completed. 4. Mandatry application documents for a noc type and noc subtype are defined under ApplicationDocument master which is defined under MDMS.
        type: array
        items:
          $ref: '#/definitions/Document'
      verificationDocuments:
        description: 1. Verification Documents will uploaded at the time of approval. 2. Mandatry verification documents for a noc are defined under VerificationDocument master which is defined under MDMS.
        type: array
        items:
          $ref: '#/definitions/Document'
      additionalDetail:
        type: object
        description: Json object to store additional details about license
      auditDetails:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
    required:
      - tenantId
      - subOwnerShipCategory
      - owners
      - channel
  NOCRequest:
    description: 'Contract class to receive request. Array of Noc items are used'
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-1-1.yml#/definitions/RequestInfo'
      NOCs:
        description: Used for search result and create only
        type: array
        minimum: 1
        maximum: 100
        items:
          $ref: '#/definitions/NOC'
  NOCResponse:
    description: 'Contract class to send response. Array of NOC items are used in case of search results or response for create, whereas single NOC item is used for update'
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      NOCs:
        description: Used for search result and create only
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/NOC'
parameters:
  pageSize:
    name: pageSize
    in: query
    description: Number of records returned.
    type: integer
    minimum: 0
    exclusiveMinimum: true
    maximum: 100
    exclusiveMaximum: false
    multipleOf: 10
    default: 20
  pageNumber:
    name: pageNumber
    in: query
    description: Page number
    type: integer
    default: 1
  sortProperty:
    name: sort
    in: query
    description: NOC results will be sorted by nocNumber ascending by default if this parameter is not provided.
    type: array
    uniqueItems: true
    minItems: 1
    maxItems: 3
    collectionFormat: pipes
    items:
      type: string
      pattern: '[-+](nocNumber|nocType|nocSubType|ownerName)'
    default:
      - +nocNumber
tags:
  - name: NOC
    description: APIs required for NOC.
